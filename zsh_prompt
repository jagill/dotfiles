setopt prompt_subst
autoload -U colors && colors # Enable colors in prompt

# Echoes a username/host string when connected over SSH (empty otherwise)
ssh_info() {
  [[ "$SSH_CONNECTION" != '' ]] && echo '%(!.%{$fg[red]%}.%{$fg[yellow]%})%n%{$reset_color%}@%{$fg[green]%}%m%{$reset_color%}:' || echo ''
}

# Echoes information about Git repository status when inside a Git repository
git_info() {

  # Exit if not inside a Git repository
  ! git rev-parse --is-inside-work-tree > /dev/null 2>&1 && return

  # Git branch/tag, or name-rev if on detached head
  local GIT_LOCATION=${$(git symbolic-ref -q HEAD || git name-rev --name-only --no-undefined --always HEAD)#(refs/heads/|tags/)}

  local AHEAD="%{$fg[blue]%}⇡NUM%{$reset_color%}"
  local BEHIND="%B%{$fg[blue]%}⇣NUM%{$reset_color%}%b"
  local MERGING="%B%{$fg[red]%}⚡︎%{$reset_color%}%b"
  local UNTRACKED="%{$fg[magenta]%}?NUM%{$reset_color%}"
  local MODIFIED="%{$fg[yellow]%}●NUM%{$reset_color%}"
  local STAGED="%{$fg[green]%}●NUM%{$reset_color%}"
  local MERGING="%F{#ffaf00}#NUM%{$reset_color%}"
  local DELETED="%{$fg[cyan]%}!NUM%{$reset_color%}"

  local -a DIVERGENCES
  local -a STATUS

  local NUM_AHEAD="$(git log --oneline @{u}.. 2> /dev/null | wc -l | tr -d ' ')"
  if [ "$NUM_AHEAD" -gt 0 ]; then
    DIVERGENCES+=( "${AHEAD//NUM/$NUM_AHEAD}" )
  fi

  local NUM_BEHIND="$(git log --oneline ..@{u} 2> /dev/null | wc -l | tr -d ' ')"
  if [ "$NUM_BEHIND" -gt 0 ]; then
    DIVERGENCES+=( "${BEHIND//NUM/$NUM_BEHIND}" )
  fi

  local GIT_DIR="$(git rev-parse --git-dir 2> /dev/null)"
  if [ -n $GIT_DIR ] && test -r $GIT_DIR/MERGE_HEAD; then
    STATUS+=( "$MERGING" )
  fi

  INDEX=$(command git status --porcelain | cut -d' ' -f1 2> /dev/null)
  NUM_UNTRACKED=$(($(echo "$INDEX" | grep '?' | wc -l)))
  NUM_MODIFIED=$(( $(echo "$INDEX" | grep '^ M' | wc -l) + $(echo $INDEX | grep '^AM' | wc -l) + $(echo "$INDEX" | grep '^ T' | wc -l) ))
  NUM_MERGING=$(($(echo "$INDEX" | grep 'U' | wc -l)))
  NUM_STAGED=$(( $(echo "$INDEX" | grep '^A' | wc -l) + $(echo $INDEX | grep '^M' | wc -l) ))
  NUM_DELETED=$(($(echo "$INDEX" | grep 'D' | wc -l)))


  if [ "$NUM_UNTRACKED" -gt 0 ]; then
    STATUS+=( "${UNTRACKED/NUM/$NUM_UNTRACKED}" )
  fi

  if [ "$NUM_MODIFIED" -gt 0 ]; then
    STATUS+=( "${MODIFIED/NUM/$NUM_MODIFIED}" )
  fi

  if [ "$NUM_MERGING" -gt 0 ]; then
    STATUS+=( "${MERGING/NUM/$NUM_MERGING}" )
  fi

  if [ "$NUM_STAGED" -gt 0 ]; then
    STATUS+=( "${STAGED/NUM/$NUM_STAGED}" )
  fi

  if [ "$NUM_DELETED" -gt 0 ]; then
    STATUS+=( "${DELETED/NUM/$NUM_DELETED}" )
  fi

  local -a GIT_INFO
  [ -n "$GIT_STATUS" ] && GIT_INFO+=( "$GIT_STATUS" )
  GIT_INFO+=( "%F{magenta}$GIT_LOCATION%f" )
  [[ ${#DIVERGENCES[@]} -ne 0 ]] && GIT_INFO+=( "${(j::)DIVERGENCES}" )
  [[ ${#STATUS[@]} -ne 0 ]] && GIT_INFO+=( "${(j::)STATUS}" )
  echo "%F{magenta}{git:%f$GIT_INFO%F{magenta}}%f"

}

# Use ❯ as the non-root prompt character; # for root
# Change the prompt character color if the last command had a nonzero exit code
# PS1='
# $(ssh_info)%{$fg[magenta]%}%~%u $(git_info)
# %(?.%{$fg[blue]%}.%{$fg[red]%})%(!.#.❯)%{$reset_color%} '

PS1='%B%F{green}%n%b@%B%m%f:%F{blue}%~%f%b $(git_info)
%B%(?.%F{green}0.%F{red}%?) %B%F{white}%(!.#.❯)%f%b '
# precmd() { print -rP "%B%F{green}%n%b@%B%m%f:%F{blue}%~%f%b" }
# PROMPT='%B%(?.%F{green}0.%F{red}%?) %B%F{white}%(!.#.❯)%f%b '
